From e87e847c6fcc1a246c0e53b2e3465feae4192805 Mon Sep 17 00:00:00 2001
From: Pranav Kant <pranavk@cs.utah.edu>
Date: Tue, 11 Feb 2020 13:24:14 -0700
Subject: [PATCH] enable-instcombine-switch

---
 llvm/lib/Transforms/InstCombine/InstructionCombining.cpp | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp b/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp
index bf32996d96e..ca47bcf7bae 100644
--- a/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp
+++ b/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp
@@ -148,6 +148,10 @@ static cl::opt<unsigned>
 MaxArraySize("instcombine-maxarray-size", cl::init(1024),
              cl::desc("Maximum array size considered when doing a combine"));
 
+static cl::opt<bool>
+DisableInstructionCombiner("disable-instruction-combiner", cl::init(false),
+                           cl::desc("Disable InstCombine Pass (default = off)"));
+
 // FIXME: Remove this flag when it is no longer necessary to convert
 // llvm.dbg.declare to avoid inaccurate debug info. Setting this to false
 // increases variable availability at the cost of accuracy. Variables that
@@ -3567,6 +3571,8 @@ static bool combineInstructionsOverFunction(
     OptimizationRemarkEmitter &ORE, BlockFrequencyInfo *BFI,
     ProfileSummaryInfo *PSI, bool ExpensiveCombines, unsigned MaxIterations,
     LoopInfo *LI) {
+  if (DisableInstructionCombiner)
+    return false;
   auto &DL = F.getParent()->getDataLayout();
   if (EnableExpensiveCombines.getNumOccurrences())
     ExpensiveCombines = EnableExpensiveCombines;
-- 
2.21.0

