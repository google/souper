import lit.formats
import os
import platform
import sys

config.name = 'Souper'
config.suffixes = ['.c', '.cpp', '.ll', '.opt']
config.test_format = lit.formats.ShTest(True)
config.test_source_root = os.path.dirname(__file__)
config.test_exec_root = config.builddir + '/test'
config.excludes = ['Inputs']

config.substitutions.append((r"%FileCheck", config.llvm_bindir + '/FileCheck'))
config.substitutions.append((r"%clang\+\+", config.llvm_bindir + '/clang++'))
config.substitutions.append((r"%clang", config.llvm_bindir + '/clang'))
config.substitutions.append((r"%llvm-as", config.llvm_bindir + '/llvm-as'))
config.substitutions.append((r"%llvm-dis", config.llvm_bindir + '/llvm-dis'))
config.substitutions.append((r"%opt", config.llvm_bindir + '/opt'))

config.substitutions.append(('%builddir', config.builddir))

config.substitutions.append(('%parser-test', config.builddir + '/parser-test'))
if platform.system() in ['Darwin']:
   config.substitutions.append(('%pass', config.builddir + '/libsouperPass.dylib'))
else:
   config.substitutions.append(('%pass', config.builddir + '/libsouperPass.so'))
config.substitutions.append(('%souper', config.builddir + '/souper'))
config.substitutions.append(('%souper-check', config.builddir + '/souper-check'))
config.substitutions.append(('%souper2llvm', config.builddir + '/souper2llvm'))
config.substitutions.append(('%sclang', config.builddir + '/sclang'))
config.substitutions.append(('%sclang\+\+', config.builddir + '/sclang++'))

if config.solver:
  config.available_features.add('solver')
  config.substitutions.append(('%solver', config.solver))
  # Solvers with model support
  for solver in ['z3', 'cvc4']:
      if solver in config.solver:
          config.available_features.add('solver-model')
          break
if config.synthesis:
  config.available_features.add('synthesis')

if config.long_duration_synthesis:
  config.available_features.add('long-duration-synthesis')

# Propagate LLVM_PROFILE_FILE if used
llvm_profile_file = os.environ.get("LLVM_PROFILE_FILE")
if llvm_profile_file:
    config.environment["LLVM_PROFILE_FILE"] = llvm_profile_file
